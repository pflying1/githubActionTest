name: Docker CI/CD Workflow
on:
  push:
    branches:
      - main
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 20
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build:prod
        env:
          NODE_ENV: production

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
          sudo apt-get update
          sudo apt-get install docker-ce

      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag my-application:latest

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NAS_IP }}
          username: ${{ secrets.NAS_USERNAME }}
          password: ${{ secrets.NAS_PASSWORD }}
          script: |
            echo "${{ secrets.NAS_PASSWORD }}" | sudo -S docker pull my-application:latest
            echo "${{ secrets.NAS_PASSWORD }}" | sudo -S docker stop my-application || true
            echo "${{ secrets.NAS_PASSWORD }}" | sudo -S docker rm my-application || true
            echo "${{ secrets.NAS_PASSWORD }}" | sudo -S docker run -d --name my-application -p 80:80 my-application:latest

            
